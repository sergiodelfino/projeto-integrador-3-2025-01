/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package br.edu.unifio.projetointegrador.formularios;

import br.edu.unifio.projetointegrador.entidades.Categoria;
import io.ebean.DB;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author User
 */
public class CategoriaForm extends javax.swing.JDialog {

    /**
     * Creates new form CategoriaForm
     */
    public CategoriaForm(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rotuloCodigo = new javax.swing.JLabel();
        textoCodigo = new javax.swing.JTextField();
        rotuloNome = new javax.swing.JLabel();
        textoNome = new javax.swing.JTextField();
        selecaoAtivo = new javax.swing.JCheckBox();
        botaoIncluir = new javax.swing.JButton();
        botaoExcluir = new javax.swing.JButton();
        botaoEditar = new javax.swing.JButton();
        botaoSair = new javax.swing.JButton();
        botaoLimpar = new javax.swing.JButton();
        rolagemCategorias = new javax.swing.JScrollPane();
        tabelaCategorias = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Categorias");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        rotuloCodigo.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        rotuloCodigo.setText("Código");

        textoCodigo.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        rotuloNome.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        rotuloNome.setText("Nome");

        textoNome.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        selecaoAtivo.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        selecaoAtivo.setSelected(true);
        selecaoAtivo.setText("Ativo");

        botaoIncluir.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        botaoIncluir.setText("Incluir");
        botaoIncluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoIncluirActionPerformed(evt);
            }
        });

        botaoExcluir.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        botaoExcluir.setText("Excluir");

        botaoEditar.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        botaoEditar.setText("Editar");

        botaoSair.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        botaoSair.setText("Sair");

        botaoLimpar.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        botaoLimpar.setText("Limpar");
        botaoLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoLimparActionPerformed(evt);
            }
        });

        tabelaCategorias.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        tabelaCategorias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tabelaCategorias.setRowHeight(30);
        tabelaCategorias.getTableHeader().setFont(new java.awt.Font("Segoe UI", java.awt.Font.BOLD, 18));
        rolagemCategorias.setViewportView(tabelaCategorias);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rolagemCategorias)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(rotuloCodigo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(textoCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(botaoIncluir)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(botaoExcluir)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(botaoEditar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(botaoLimpar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(botaoSair))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(rotuloNome)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(selecaoAtivo)
                                    .addComponent(textoNome, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 153, Short.MAX_VALUE)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {botaoEditar, botaoExcluir, botaoIncluir, botaoLimpar, botaoSair});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rotuloCodigo)
                    .addComponent(textoCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rotuloNome)
                    .addComponent(textoNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(selecaoAtivo)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoIncluir)
                    .addComponent(botaoExcluir)
                    .addComponent(botaoEditar)
                    .addComponent(botaoSair)
                    .addComponent(botaoLimpar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rolagemCategorias, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void botaoIncluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoIncluirActionPerformed
        Categoria categoria = new Categoria(); // Cria uma nova instância de Categoria
        categoria.setNome(textoNome.getText()); // Define o nome da categoria com o texto inserido pelo usuário
        categoria.setAtivo(selecaoAtivo.isSelected()); // Define se a categoria está ativa com base na seleção do checkbox

        categoria.save(); // Salva a categoria no banco de dados

        JOptionPane.showMessageDialog(this, "Categoria inserida com sucesso!", "Categorias", JOptionPane.INFORMATION_MESSAGE); // Exibe uma mensagem informando que a categoria foi inserida com sucesso

        textoCodigo.setText(null); // Limpa o campo de código
        textoNome.setText(null); // Limpa o campo de nome
        selecaoAtivo.setSelected(true); // Marca o checkbox como selecionado por padrão

        List<Categoria> categorias = DB // Consulta o banco de dados
                .find(Categoria.class) // Busca registros da classe Categoria
                .orderBy("nome") // Ordena os registros pelo nome
                .findList(); // Recupera a lista de categorias

        DefaultTableModel modelo = (DefaultTableModel) tabelaCategorias.getModel(); // Obtém o modelo da tabela onde as categorias serão exibidas

        modelo.setRowCount(0); // Limpa todas as linhas da tabela antes de atualizar

        for (Categoria cat : categorias) { // Percorre todas as categorias encontradas
            modelo.addRow( // Adiciona uma nova linha na tabela
                    new Object[]{ // Cria uma linha com os dados da categoria
                        cat.getCodigo(), // Coluna 1: código da categoria
                        cat.getNome() // Coluna 2: nome da categoria
                    }
            );
        }

        textoNome.requestFocus(); // Coloca o foco de volta no campo de nome para facilitar o próximo cadastro
    }//GEN-LAST:event_botaoIncluirActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        List<Categoria> categorias = DB.find(Categoria.class) // Busca todas as categorias no banco de dados
                .orderBy("nome") // Ordena os resultados pelo nome
                .findList(); // Finaliza a consulta e retorna a lista de categorias

        DefaultTableModel modelo = (DefaultTableModel) tabelaCategorias.getModel(); // Pega o modelo da tabela onde os dados serão inseridos

        for (Categoria categoria : categorias) { // Percorre cada categoria retornada da consulta
            modelo.addRow( // Adiciona uma nova linha na tabela
                    new Object[]{ // Cria um array com os dados da categoria
                        categoria.getCodigo(), // Código da categoria na primeira coluna
                        categoria.getNome() // Nome da categoria na segunda coluna
                    }
            );
        }

        textoNome.requestFocus(); // Coloca o foco no campo de nome para facilitar o próximo cadastro
    }//GEN-LAST:event_formWindowOpened

    private void botaoLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoLimparActionPerformed
        textoCodigo.setText(null); // Limpa o campo de código
        textoNome.setText(null); // Limpa o campo de nome
        selecaoAtivo.setSelected(true); // Marca o checkbox "ativo" como verdadeiro

        List<Categoria> lista = DB // Inicia a consulta no banco de dados
                .find(Categoria.class) // Busca todas as instâncias da classe Categoria
                .orderBy("nome") // Ordena os resultados pelo nome
                .findList(); // Finaliza a consulta e retorna a lista

        DefaultTableModel modelo = (DefaultTableModel) tabelaCategorias.getModel(); // Obtém o modelo da tabela de categorias

        modelo.setRowCount(0); // Limpa todas as linhas atuais da tabela

        for (Categoria categoria : lista) { // Percorre cada categoria da lista
            modelo.addRow( // Adiciona uma nova linha à tabela
                    new Object[]{ // Cria um array de objetos para representar a linha
                        categoria.getCodigo(), // Primeira coluna: código da categoria
                        categoria.getNome() // Segunda coluna: nome da categoria
                    }
            );
        }

        textoNome.requestFocus(); // Coloca o foco no campo de nome para o próximo cadastro
    }//GEN-LAST:event_botaoLimparActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CategoriaForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CategoriaForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CategoriaForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CategoriaForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                CategoriaForm dialog = new CategoriaForm(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoEditar;
    private javax.swing.JButton botaoExcluir;
    private javax.swing.JButton botaoIncluir;
    private javax.swing.JButton botaoLimpar;
    private javax.swing.JButton botaoSair;
    private javax.swing.JScrollPane rolagemCategorias;
    private javax.swing.JLabel rotuloCodigo;
    private javax.swing.JLabel rotuloNome;
    private javax.swing.JCheckBox selecaoAtivo;
    private javax.swing.JTable tabelaCategorias;
    private javax.swing.JTextField textoCodigo;
    private javax.swing.JTextField textoNome;
    // End of variables declaration//GEN-END:variables
}
